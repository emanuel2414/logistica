name: SonarQube
on:
  push:
    branches:
      - develop
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'
      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Grant execute permission to Gradlew
        run: chmod +x gradlew

        - name: Set H2 Database for Tests
        run: |
          echo "spring.datasource.url=jdbc:h2:mem:testdb" >> src/test/resources/application.properties
          echo "spring.datasource.driver-class-name=org.h2.Driver" >> src/test/resources/application.properties
          echo "spring.datasource.username=sa" >> src/test/resources/application.properties
          echo "spring.datasource.password=" >> src/test/resources/application.properties
          echo "spring.jpa.database-platform=org.hibernate.dialect.H2Dialect" >> src/test/resources/application.properties
          echo "spring.jpa.hibernate.ddl-auto=update" >> src/test/resources/application.properties
          echo "spring.jpa.show-sql=true" >> src/test/resources/application.properties

      - name: Build and run tests with coverage
        run: ./gradlew clean test jacocoTestReport
      - name: Build and analyze
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./gradlew build sonar --info
